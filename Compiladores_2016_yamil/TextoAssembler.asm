.386
.model flat, stdcall
option casemap :none
include \masm32\include\windows.inc
include \masm32\include\kernel32.inc
include \masm32\include\user32.inc
includelib \masm32\lib\kernel32.lib
includelib \masm32\lib\user32.lib

.data
@auxAx dw 0
@auxDx dw 0
var@f dw 0
es_6_matriz_completa__MULTIPLICACIONES_INTEGER db "es 6 matriz completa  MULTIPLICACIONES INTEGER", 0
es_6_matriz_completa__DIVISION_INTEGER db "es 6 matriz completa  DIVISION INTEGER", 0
_i1 dw 1
empiezo_a_operar db "empiezo a operar", 0
_ui1 dw 1
mat@y dw 5,2,1,3,4,6
_i6 dw 6
_ui6 dw 6
var@d dw 0
_i4 dw 4
_ui4 dw 4
var@b dw 0
var@g dw 0
es_6_matriz_completa__DIVISION_UINTEGER db "es 6 matriz completa  DIVISION UINTEGER", 0
es_6_matriz_completa_MULTIPLICACIONES_UINTEGER db "es 6 matriz completa MULTIPLICACIONES UINTEGER", 0
_i2 dw 2
_ui2 dw 2
prog@programa dw 0
var@e dw 0
NO_es_6_matriz_completa_DIVISION_INTEGER_no_anda db "NO es 6 matriz completa DIVISION INTEGER no anda", 0
NO_es_6_matriz_completa_MULTIPLICACIONES_INTEGER db "NO es 6 matriz completa MULTIPLICACIONES INTEGER", 0
NO_es_6_matriz_completa_DIVISION_UINTEGER_no_anda db "NO es 6 matriz completa DIVISION UINTEGER no anda", 0
_i0 dw 0
mat@x dw 5,2,1,3,4,6
_i5 dw 5
_ui5 dw 5
var@c dw 0
var@h dw 0
_i3 dw 3
_ui3 dw 3
NO_es_6_matriz_completa_MULTIPLICACIONES_UINTEGER_no_anda db "NO es 6 matriz completa MULTIPLICACIONES UINTEGER no anda", 0
var@a dw 0
division_por_cero db "division por Cero" , 0
overflow_suma db "overflow de suma" , 0
programa_compila db "Programa Compila" , 0
overflow_matriz db "Se accedio a un elemento fuera del rango de la matriz" , 0
error_conversion db "El valor del elemento no se puede convertir" , 0

.code
DIVCERO:
Invoke MessageBox, NULL, addr division_por_cero, addr division_por_cero, MB_OK
Invoke ExitProcess, 0
OVERFLOWSUMA:
Invoke MessageBox, NULL, addr overflow_suma, addr overflow_suma, MB_OK
Invoke ExitProcess, 0
MATRIZ_FUERA_RANGO:
Invoke MessageBox, NULL, addr overflow_matriz, addr overflow_matriz, MB_OK
Invoke ExitProcess, 0
ERRORENCONVERSION:
Invoke MessageBox, NULL, addr error_conversion, addr error_conversion, MB_OK
Invoke ExitProcess, 0

START:
MOV BX, _i1
MOV var@b, BX
MOV BX, _i0
MOV var@f, BX
MOV BX, _i1
MOV var@a, BX
Label3:
MOV BX, var@b
CMP BX, var@a
JGE Label28
MOV BX, _i1
MOV var@e, BX
Label7:
MOV BX, var@b
CMP BX, var@e
JGE Label22
MOV BX, var@a
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, var@e
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, var@f
MOV [ESI], CX
MOV BX, var@e
SUB BX, _i1
MOV var@e, BX
JMP Label7
Label22:
MOV BX, var@f
ADD BX, _i1
JO OVERFLOWSUMA
MOV var@f, BX
MOV BX, var@a
SUB BX, _i1
MOV var@a, BX
JMP Label3
Label28:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
MOV [ESI], CX
Invoke MessageBox, NULL, addr empiezo_a_operar, addr empiezo_a_operar, MB_OK
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
IMUL CX
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label131
Invoke MessageBox, NULL, addr es_6_matriz_completa__MULTIPLICACIONES_INTEGER, addr es_6_matriz_completa__MULTIPLICACIONES_INTEGER, MB_OK
JMP Label133
Label131:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_MULTIPLICACIONES_INTEGER, addr NO_es_6_matriz_completa_MULTIPLICACIONES_INTEGER, MB_OK
Label133:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui1
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
MUL CX
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
MUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
MUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
MUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label234
Invoke MessageBox, NULL, addr es_6_matriz_completa_MULTIPLICACIONES_UINTEGER, addr es_6_matriz_completa_MULTIPLICACIONES_UINTEGER, MB_OK
JMP Label236
Label234:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_MULTIPLICACIONES_UINTEGER_no_anda, addr NO_es_6_matriz_completa_MULTIPLICACIONES_UINTEGER_no_anda, MB_OK
Label236:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
IDIV CX
MOV BX,  AX 
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
IDIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
IDIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
IDIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label338
Invoke MessageBox, NULL, addr es_6_matriz_completa__DIVISION_INTEGER, addr es_6_matriz_completa__DIVISION_INTEGER, MB_OK
JMP Label340
Label338:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_DIVISION_INTEGER_no_anda, addr NO_es_6_matriz_completa_DIVISION_INTEGER_no_anda, MB_OK
Label340:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui1
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
DIV CX
MOV BX,  AX 
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label441
Invoke MessageBox, NULL, addr es_6_matriz_completa__DIVISION_UINTEGER, addr es_6_matriz_completa__DIVISION_UINTEGER, MB_OK
JMP Label443
Label441:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_DIVISION_UINTEGER_no_anda, addr NO_es_6_matriz_completa_DIVISION_UINTEGER_no_anda, MB_OK
Label443:
Invoke MessageBox, NULL, addr programa_compila, addr programa_compila, MB_OK
Invoke ExitProcess, 0
END START
