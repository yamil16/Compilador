.386
.model flat, stdcall
option casemap :none
include \masm32\include\windows.inc
include \masm32\include\kernel32.inc
include \masm32\include\user32.inc
includelib \masm32\lib\kernel32.lib
includelib \masm32\lib\user32.lib

.data
@auxAx dw 0
@auxDx dw 0
NO_es_2_matriz_var_reg__MULTIPLICACIONES_INTEGER db "NO es 2 matriz var reg  MULTIPLICACIONES INTEGER", 0
es_6_matriz_completa__DIVISION_INTEGER db "es 6 matriz completa  DIVISION INTEGER", 0
es_6_matriz_completa__MULTIPLICACIONES_INTEGER db "es 6 matriz completa  MULTIPLICACIONES INTEGER", 0
NO_es_1_matriz_reg_reg_DIVISION_INTEGER db "NO es 1 matriz reg reg DIVISION INTEGER", 0
NO_es_1_matriz_reg_reg_MULTIPLICACIONES_INTEGER db "NO es 1 matriz reg reg MULTIPLICACIONES INTEGER", 0
es_6_matriz_completa__DIVISION_UINTEGER db "es 6 matriz completa  DIVISION UINTEGER", 0
es_9_integer db "es 9 integer", 0
NO_es_2_matriz_var_reg_MULTIPLICACIONES_UINTEGER db "NO es 2 matriz var reg MULTIPLICACIONES UINTEGER", 0
NO_es_1_matriz_reg_var_MULTIPLICACIONES_UINTEGER db "NO es 1 matriz reg var MULTIPLICACIONES UINTEGER", 0
OK_matriz_uinteger db "OK matriz uinteger", 0
OK_funciona_asignacion_doble_FOR db "OK funciona asignacion doble FOR", 0
es_1_matriz_reg_var_DIVISION_UINTEGER db "es 1 matriz reg var DIVISION UINTEGER", 0
NO_es_8_uuuinteger db "NO es 8 uuuinteger", 0
es_6_matriz_completa_MULTIPLICACIONES_UINTEGER db "es 6 matriz completa MULTIPLICACIONES UINTEGER", 0
mat@x dw 5,2,1,3,4,6
es_2_matriz_var_reg_MULTIPLICACIONES_UINTEGER db "es 2 matriz var reg MULTIPLICACIONES UINTEGER", 0
es_1_matriz_reg_var_MULTIPLICACIONES_UINTEGER db "es 1 matriz reg var MULTIPLICACIONES UINTEGER", 0
mat@y dw 5,2,1,3,4,6
NO_es_1_matriz_reg_var_DIVISION_UINTEGER db "NO es 1 matriz reg var DIVISION UINTEGER", 0
NO_es_2_matriz_var_var_DIVISION_INTEGER db "NO es 2 matriz var var DIVISION INTEGER", 0
es_2_matriz_var_var_DIVISION_UINTEGER db "es 2 matriz var var DIVISION UINTEGER", 0
NO_es_6_matriz_completa_DIVISION_UINTEGER_no_anda db "NO es 6 matriz completa DIVISION UINTEGER no anda", 0
es_1_matriz_reg_reg_DIVISION_UINTEGER db "es 1 matriz reg reg DIVISION UINTEGER", 0
es_1_matriz_reg_var_DIVISION_INTEGER db "es 1 matriz reg var DIVISION INTEGER", 0
NO_es_2_matriz_var_var_MULTIPLICACIONES_INTEGER db "NO es 2 matriz var var MULTIPLICACIONES INTEGER", 0
NO_es_2_matriz_var_var_DIVISION_UINTEGER db "NO es 2 matriz var var DIVISION UINTEGER", 0
NO_es_1_matriz_reg_reg_DIVISION_UINTEGER db "NO es 1 matriz reg reg DIVISION UINTEGER", 0
NO_es_6_matriz_completa_MULTIPLICACIONES_UINTEGER_no_anda db "NO es 6 matriz completa MULTIPLICACIONES UINTEGER no anda", 0
NO_es_1_matriz_reg_var_MULTIPLICACIONES_INTEGER db "NO es 1 matriz reg var MULTIPLICACIONES INTEGER", 0
es_2_matriz_var_reg_DIVISION_UINTEGER db "es 2 matriz var reg DIVISION UINTEGER", 0
es_8_uuuinteger db "es 8 uuuinteger", 0
es_1_matriz_reg_reg_DIVISION_INTEGER db "es 1 matriz reg reg DIVISION INTEGER", 0
es_2_matriz_var_reg_MULTIPLICACIONES_INTEGER db "es 2 matriz var reg MULTIPLICACIONES INTEGER", 0
NO_es_6_matriz_completa_DIVISION_INTEGER_no_anda db "NO es 6 matriz completa DIVISION INTEGER no anda", 0
es_1_matriz_reg_reg_MULTIPLICACIONES_INTEGER db "es 1 matriz reg reg MULTIPLICACIONES INTEGER", 0
var@a dw 0
var@b dw 0
NO_es_2_matriz_var_var_MULTIPLICACIONES_UINTEGER db "NO es 2 matriz var var MULTIPLICACIONES UINTEGER", 0
var@c dw 0
es_2_matriz_var_var_DIVISION_INTEGER db "es 2 matriz var var DIVISION INTEGER", 0
es_2_matriz_var_var_MULTIPLICACIONES_INTEGER db "es 2 matriz var var MULTIPLICACIONES INTEGER", 0
_i0 dw 0
var@d dw 0
NO_es_2_matriz_var_reg__DIVISION_INTEGER db "NO es 2 matriz var reg  DIVISION INTEGER", 0
es_2_matriz_var_var_MULTIPLICACIONES_UINTEGER db "es 2 matriz var var MULTIPLICACIONES UINTEGER", 0
var@e dw 0
_i1 dw 1
_ui1 dw 1
_i2 dw 2
var@f dw 0
_ui2 dw 2
_i3 dw 3
var@g dw 0
_ui3 dw 3
es_2_matriz_var_reg_DIVISION_INTEGER db "es 2 matriz var reg DIVISION INTEGER", 0
var@h dw 0
_i4 dw 4
_ui4 dw 4
_i5 dw 5
_ui5 dw 5
es_1_matriz_reg_var_MULTIPLICACIONES_INTEGER db "es 1 matriz reg var MULTIPLICACIONES INTEGER", 0
NO_es_2_matriz_var_reg__DIVISION_UINTEGER db "NO es 2 matriz var reg  DIVISION UINTEGER", 0
prog@programa dw 0
NO_es_1_matriz_reg_reg_MULTIPLICACIONES_UINTEGER db "NO es 1 matriz reg reg MULTIPLICACIONES UINTEGER", 0
_i6 dw 6
_ui6 dw 6
_in4 dw -4
OK_matriz_integer db "OK matriz integer", 0
_i8 dw 8
es_1_matriz_reg_reg_MULTIPLICACIONES_UINTEGER db "es 1 matriz reg reg MULTIPLICACIONES UINTEGER", 0
_i9 dw 9
NO_es_6_matriz_completa_MULTIPLICACIONES_INTEGER db "NO es 6 matriz completa MULTIPLICACIONES INTEGER", 0
NO_es_9_integer db "NO es 9 integer", 0
NO_es_1_matriz_reg_var_DIVISION_INTEGER db "NO es 1 matriz reg var DIVISION INTEGER", 0
division_por_cero db "division por Cero" , 0
overflow_suma db "overflow de suma" , 0
programa_compila db "Programa Compila" , 0
overflow_matriz db "Se accedio a un elemento fuera del rango de la matriz" , 0
error_conversion db "El valor del elemento no se puede convertir" , 0

.code
DIVCERO:
Invoke MessageBox, NULL, addr division_por_cero, addr division_por_cero, MB_OK
Invoke ExitProcess, 0
OVERFLOWSUMA:
Invoke MessageBox, NULL, addr overflow_suma, addr overflow_suma, MB_OK
Invoke ExitProcess, 0
MATRIZ_FUERA_RANGO:
Invoke MessageBox, NULL, addr overflow_matriz, addr overflow_matriz, MB_OK
Invoke ExitProcess, 0
ERRORENCONVERSION:
Invoke MessageBox, NULL, addr error_conversion, addr error_conversion, MB_OK
Invoke ExitProcess, 0

START:
MOV BX, _i2
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _in4
MOV [ESI], CX
MOV BX, _i2
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
CMP BX, _in4
JNE Label20
Invoke MessageBox, NULL, addr OK_matriz_integer, addr OK_matriz_integer, MB_OK
Label20:
MOV BX, _i2
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui4
MOV [ESI], CX
MOV BX, _i2
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
CMP BX, _ui4
JNE Label41
Invoke MessageBox, NULL, addr OK_matriz_uinteger, addr OK_matriz_uinteger, MB_OK
Label41:
MOV BX, _i1
MOV var@b, BX
MOV BX, _i0
MOV var@f, BX
MOV BX, _i1
MOV var@a, BX
Label45:
MOV BX, var@a
CMP BX, var@b
JL Label70
MOV BX, _i1
MOV var@e, BX
Label49:
MOV BX, var@e
CMP BX, var@b
JL Label64
MOV BX, var@a
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, var@e
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, var@f
MOV [ESI], CX
MOV BX, var@e
SUB BX, _i1
MOV var@e, BX
JMP Label49
Label64:
MOV BX, var@f
ADD BX, _i1
JO OVERFLOWSUMA
MOV var@f, BX
MOV BX, var@a
SUB BX, _i1
MOV var@a, BX
JMP Label45
Label70:
MOV BX, _i0
MOV var@b, BX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
CMP BX, _i0
JNE Label83
Invoke MessageBox, NULL, addr OK_funciona_asignacion_doble_FOR, addr OK_funciona_asignacion_doble_FOR, MB_OK
Label83:
MOV BX, _i1
ADD BX, _i1
JO OVERFLOWSUMA
MOV var@a, BX
MOV BX, var@a
CMP BX, 0
JE DIVCERO
MOV AX, _i2
CWD 
MOV BX, var@a
IDIV BX 
MOV BX, AX 
MOV var@b, BX
MOV BX, _ui2
MOV var@c, BX
MOV BX, _ui1
MOV var@d, BX
MOV BX, _i3
CMP BX, 0
JB ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i9
MOV var@e, BX
MOV AX, var@a
IMUL var@b
AND DX, 32768
OR AX, DX
MOV BX, AX
MOV CX, var@b
SUB CX, _i1
MOV AX, CX 
IMUL var@a
AND DX, 32768
OR AX, DX
MOV CX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, var@a
SUB CX, _i1
MOV AX, CX 
IMUL var@b
AND DX, 32768
OR AX, DX
MOV CX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, var@a
SUB CX, _i1
MOV DX, var@a
SUB DX, _i1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, var@b
CMP CX, 0
JE DIVCERO
MOV AX, var@a
CWD 
MOV CX, var@b
IDIV CX 
MOV CX, AX 
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, var@h
SUB CX, _ui1
MOV DX, var@a
CMP DX, 0
JB ERRORENCONVERSION
MOV @auxDx, DX
CMP CX, 0
JE DIVCERO
MOV AX, @auxDx
CWD 
DIV CX
MOV @auxDx,  AX 
MOV DX, @auxDx
CMP BX, 0
JL ERRORENCONVERSION
ADD BX, DX
JC OVERFLOWSUMA
MOV CX, var@h
SUB CX, _ui1
MOV DX, var@a
CMP DX, 0
JB ERRORENCONVERSION
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, var@h
SUB CX, _ui1
MOV DX, var@h
SUB DX, _ui1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV var@h, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label125
Invoke MessageBox, NULL, addr es_9_integer, addr es_9_integer, MB_OK
JMP Label127
Label125:
Invoke MessageBox, NULL, addr NO_es_9_integer, addr NO_es_9_integer, MB_OK
Label127:
MOV BX, _i3
CMP BX, 0
JB ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i8
MOV var@e, BX
MOV AX, var@c
MUL var@d
MOV BX, AX
MOV CX, var@d
SUB CX, _ui1
MOV AX, CX
MUL var@c
MOV CX, AX
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, var@c
SUB CX, _ui1
MOV AX, CX 
MUL var@d
MOV CX, AX
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, var@c
SUB CX, _ui1
MOV DX, var@d
SUB DX, _ui1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
MUL DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, var@d
CMP CX, 0
JE DIVCERO
MOV AX, var@c
CWD 
MOV CX, var@d
DIV CX 
MOV CX, AX 
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, var@h
SUB CX, _ui1
CMP CX, 0
JE DIVCERO
MOV AX, var@c
CWD 
DIV CX
MOV DX,  AX 
ADD BX, DX
JC OVERFLOWSUMA
MOV CX, var@h
SUB CX, _ui1
MOV DX, var@c
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV  var@c
MOV DX,  AX 
ADD BX, DX
JC OVERFLOWSUMA
MOV CX, var@h
SUB CX, _ui1
MOV DX, var@h
SUB DX, _ui1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV var@h, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label160
Invoke MessageBox, NULL, addr es_8_uuuinteger, addr es_8_uuuinteger, MB_OK
JMP Label162
Label160:
Invoke MessageBox, NULL, addr NO_es_8_uuuinteger, addr NO_es_8_uuuinteger, MB_OK
Label162:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
IMUL CX
AND DX, 32768
OR AX, DX
MOV CX, AX
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label206
Invoke MessageBox, NULL, addr es_2_matriz_var_var_MULTIPLICACIONES_INTEGER, addr es_2_matriz_var_var_MULTIPLICACIONES_INTEGER, MB_OK
JMP Label208
Label206:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_var_MULTIPLICACIONES_INTEGER, addr NO_es_2_matriz_var_var_MULTIPLICACIONES_INTEGER, MB_OK
Label208:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
SUB BX, _i1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
IMUL CX
AND DX, 32768
OR AX, DX
MOV CX, AX
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label235
Invoke MessageBox, NULL, addr es_1_matriz_reg_var_MULTIPLICACIONES_INTEGER, addr es_1_matriz_reg_var_MULTIPLICACIONES_INTEGER, MB_OK
JMP Label237
Label235:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_var_MULTIPLICACIONES_INTEGER, addr NO_es_1_matriz_reg_var_MULTIPLICACIONES_INTEGER, MB_OK
Label237:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
SUB BX, _i1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV AX, BX 
IMUL CX
AND DX, 32768
OR AX, DX
MOV CX, AX
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label265
Invoke MessageBox, NULL, addr es_1_matriz_reg_reg_MULTIPLICACIONES_INTEGER, addr es_1_matriz_reg_reg_MULTIPLICACIONES_INTEGER, MB_OK
JMP Label267
Label265:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_reg_MULTIPLICACIONES_INTEGER, addr NO_es_1_matriz_reg_reg_MULTIPLICACIONES_INTEGER, MB_OK
Label267:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV AX, BX 
IMUL CX
AND DX, 32768
OR AX, DX
MOV CX, AX
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label294
Invoke MessageBox, NULL, addr es_2_matriz_var_reg_MULTIPLICACIONES_INTEGER, addr es_2_matriz_var_reg_MULTIPLICACIONES_INTEGER, MB_OK
JMP Label296
Label294:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_reg__MULTIPLICACIONES_INTEGER, addr NO_es_2_matriz_var_reg__MULTIPLICACIONES_INTEGER, MB_OK
Label296:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
IMUL CX
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL DX
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label380
Invoke MessageBox, NULL, addr es_6_matriz_completa__MULTIPLICACIONES_INTEGER, addr es_6_matriz_completa__MULTIPLICACIONES_INTEGER, MB_OK
JMP Label382
Label380:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_MULTIPLICACIONES_INTEGER, addr NO_es_6_matriz_completa_MULTIPLICACIONES_INTEGER, MB_OK
Label382:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui1
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
MUL CX
MOV BX, AX
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label425
Invoke MessageBox, NULL, addr es_2_matriz_var_var_MULTIPLICACIONES_UINTEGER, addr es_2_matriz_var_var_MULTIPLICACIONES_UINTEGER, MB_OK
JMP Label427
Label425:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_var_MULTIPLICACIONES_UINTEGER, addr NO_es_2_matriz_var_var_MULTIPLICACIONES_UINTEGER, MB_OK
Label427:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
SUB BX, _ui1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
MUL CX
MOV BX, AX
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label453
Invoke MessageBox, NULL, addr es_1_matriz_reg_var_MULTIPLICACIONES_UINTEGER, addr es_1_matriz_reg_var_MULTIPLICACIONES_UINTEGER, MB_OK
JMP Label455
Label453:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_var_MULTIPLICACIONES_UINTEGER, addr NO_es_1_matriz_reg_var_MULTIPLICACIONES_UINTEGER, MB_OK
Label455:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
SUB BX, _ui1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV AX, BX 
MUL CX
MOV BX, AX
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label482
Invoke MessageBox, NULL, addr es_1_matriz_reg_reg_MULTIPLICACIONES_UINTEGER, addr es_1_matriz_reg_reg_MULTIPLICACIONES_UINTEGER, MB_OK
JMP Label484
Label482:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_reg_MULTIPLICACIONES_UINTEGER, addr NO_es_1_matriz_reg_reg_MULTIPLICACIONES_UINTEGER, MB_OK
Label484:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV AX, BX 
MUL CX
MOV BX, AX
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label510
Invoke MessageBox, NULL, addr es_2_matriz_var_reg_MULTIPLICACIONES_UINTEGER, addr es_2_matriz_var_reg_MULTIPLICACIONES_UINTEGER, MB_OK
JMP Label512
Label510:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_reg_MULTIPLICACIONES_UINTEGER, addr NO_es_2_matriz_var_reg_MULTIPLICACIONES_UINTEGER, MB_OK
Label512:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV AX, BX 
MUL CX
MOV BX, AX
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
MUL DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
MUL DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
MUL DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label595
Invoke MessageBox, NULL, addr es_6_matriz_completa_MULTIPLICACIONES_UINTEGER, addr es_6_matriz_completa_MULTIPLICACIONES_UINTEGER, MB_OK
JMP Label597
Label595:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_MULTIPLICACIONES_UINTEGER_no_anda, addr NO_es_6_matriz_completa_MULTIPLICACIONES_UINTEGER_no_anda, MB_OK
Label597:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
IDIV CX
MOV BX,  AX 
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label641
Invoke MessageBox, NULL, addr es_2_matriz_var_var_DIVISION_INTEGER, addr es_2_matriz_var_var_DIVISION_INTEGER, MB_OK
JMP Label643
Label641:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_var_DIVISION_INTEGER, addr NO_es_2_matriz_var_var_DIVISION_INTEGER, MB_OK
Label643:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
SUB BX, _i1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
IDIV CX
MOV BX,  AX 
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label670
Invoke MessageBox, NULL, addr es_1_matriz_reg_var_DIVISION_INTEGER, addr es_1_matriz_reg_var_DIVISION_INTEGER, MB_OK
JMP Label672
Label670:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_var_DIVISION_INTEGER, addr NO_es_1_matriz_reg_var_DIVISION_INTEGER, MB_OK
Label672:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
SUB BX, _i1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
IDIV CX
MOV BX,  AX 
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label700
Invoke MessageBox, NULL, addr es_1_matriz_reg_reg_DIVISION_INTEGER, addr es_1_matriz_reg_reg_DIVISION_INTEGER, MB_OK
JMP Label702
Label700:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_reg_DIVISION_INTEGER, addr NO_es_1_matriz_reg_reg_DIVISION_INTEGER, MB_OK
Label702:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
IDIV CX
MOV BX,  AX 
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label729
Invoke MessageBox, NULL, addr es_2_matriz_var_reg_DIVISION_INTEGER, addr es_2_matriz_var_reg_DIVISION_INTEGER, MB_OK
JMP Label731
Label729:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_reg__DIVISION_INTEGER, addr NO_es_2_matriz_var_reg__DIVISION_INTEGER, MB_OK
Label731:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@x
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
IDIV CX
MOV BX,  AX 
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
IDIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
SUB CX, _i1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
IDIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@x
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@x
ADD si, DX
MOV DX, [ESI]
SUB DX, _i1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
IDIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JO OVERFLOWSUMA
CMP BX, 0
JL ERRORENCONVERSION
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label815
Invoke MessageBox, NULL, addr es_6_matriz_completa__DIVISION_INTEGER, addr es_6_matriz_completa__DIVISION_INTEGER, MB_OK
JMP Label817
Label815:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_DIVISION_INTEGER_no_anda, addr NO_es_6_matriz_completa_DIVISION_INTEGER_no_anda, MB_OK
Label817:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui1
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _ui2
MOV [ESI], CX
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
DIV CX
MOV BX,  AX 
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label860
Invoke MessageBox, NULL, addr es_2_matriz_var_var_DIVISION_UINTEGER, addr es_2_matriz_var_var_DIVISION_UINTEGER, MB_OK
JMP Label862
Label860:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_var_DIVISION_UINTEGER, addr NO_es_2_matriz_var_var_DIVISION_UINTEGER, MB_OK
Label862:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
SUB BX, _ui1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
DIV CX
MOV BX,  AX 
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label888
Invoke MessageBox, NULL, addr es_1_matriz_reg_var_DIVISION_UINTEGER, addr es_1_matriz_reg_var_DIVISION_UINTEGER, MB_OK
JMP Label890
Label888:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_var_DIVISION_UINTEGER, addr NO_es_1_matriz_reg_var_DIVISION_UINTEGER, MB_OK
Label890:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
SUB BX, _ui1
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
DIV CX
MOV BX,  AX 
MOV var@h, BX
MOV BX, _i1
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label917
Invoke MessageBox, NULL, addr es_1_matriz_reg_reg_DIVISION_UINTEGER, addr es_1_matriz_reg_reg_DIVISION_UINTEGER, MB_OK
JMP Label919
Label917:
Invoke MessageBox, NULL, addr NO_es_1_matriz_reg_reg_DIVISION_UINTEGER, addr NO_es_1_matriz_reg_reg_DIVISION_UINTEGER, MB_OK
Label919:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
DIV CX
MOV BX,  AX 
MOV var@h, BX
MOV BX, _i2
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label945
Invoke MessageBox, NULL, addr es_2_matriz_var_reg_DIVISION_UINTEGER, addr es_2_matriz_var_reg_DIVISION_UINTEGER, MB_OK
JMP Label947
Label945:
Invoke MessageBox, NULL, addr NO_es_2_matriz_var_reg__DIVISION_UINTEGER, addr NO_es_2_matriz_var_reg__DIVISION_UINTEGER, MB_OK
Label947:
MOV BX, _i1
SUB BX, _i1
CMP BX, 0
JL MATRIZ_FUERA_RANGO
CMP BX, 3
JG MATRIZ_FUERA_RANGO
MOV CX, _i2
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, BX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV BX, AX
ADD BX, CX
JO OVERFLOWSUMA
MOV AX, BX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV BX, AX
LEA ESI, mat@y
ADD si, BX
MOV BX, [ESI]
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
CMP CX, 0
JE DIVCERO
MOV AX, BX
CWD 
DIV CX
MOV BX,  AX 
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i1
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
SUB CX, _ui1
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV CX, _i1
SUB CX, _i1
CMP CX, 0
JL MATRIZ_FUERA_RANGO
CMP CX, 3
JG MATRIZ_FUERA_RANGO
MOV DX, _i2
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, CX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV CX, AX
MOV AX, @auxAx
MOV DX, @auxDx
ADD CX, DX
JO OVERFLOWSUMA
MOV AX, CX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV CX, AX
LEA ESI, mat@y
ADD si, CX
MOV CX, [ESI]
MOV DX, _i1
SUB DX, _i1
CMP DX, 0
JL MATRIZ_FUERA_RANGO
CMP DX, 3
JG MATRIZ_FUERA_RANGO
MOV AX, _i2
SUB AX, _i1
CMP AX, 0
JL MATRIZ_FUERA_RANGO
CMP AX, 3
JG MATRIZ_FUERA_RANGO
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i3
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

ADD DX, AX
JO OVERFLOWSUMA
MOV @auxAx, AX
MOV @auxDx, DX
MOV AX, DX 
IMUL  _i2
AND DX, 32768
OR AX, DX
MOV DX, AX
MOV AX, @auxAx

LEA ESI, mat@y
ADD si, DX
MOV DX, [ESI]
SUB DX, _ui1
MOV @auxDx, DX
CMP DX, 0
JE DIVCERO
MOV AX, CX
CWD 
DIV @auxDx
MOV CX,  AX 
MOV DX, @auxDx
ADD BX, CX
JC OVERFLOWSUMA
MOV var@h, BX
MOV BX, _i6
MOV var@e, BX
MOV BX, var@e
CMP BX, 0
JB ERRORENCONVERSION
MOV CX, var@h
CMP CX, BX
JNE Label1030
Invoke MessageBox, NULL, addr es_6_matriz_completa__DIVISION_UINTEGER, addr es_6_matriz_completa__DIVISION_UINTEGER, MB_OK
JMP Label1032
Label1030:
Invoke MessageBox, NULL, addr NO_es_6_matriz_completa_DIVISION_UINTEGER_no_anda, addr NO_es_6_matriz_completa_DIVISION_UINTEGER_no_anda, MB_OK
Label1032:
Invoke MessageBox, NULL, addr programa_compila, addr programa_compila, MB_OK
Invoke ExitProcess, 0
END START
